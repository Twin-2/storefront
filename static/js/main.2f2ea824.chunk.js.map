{"version":3,"sources":["components/header.js","components/footer.js","reduxStore/reducers/categoryReducer.js","components/categories.js","reduxStore/reducers/shoppingCart.js","reduxStore/reducers/productReducer.js","components/products.js","components/simpleCart.js","components/storefront.js","App.js","reduxStore/index.js","index.js"],"names":["connect","state","shoppingcart","shoppingCart","props","Paper","className","elevation","IconButton","Badge","badgeContent","cart","length","color","Footer","href","initialState","categories","activeCategory","getCategories","payload","type","categoryReducer","action","mapDispatchToProps","activate","category","Tabs","value","textColor","indicatorColor","map","idx","Tab","label","name","onClick","includes","console","log","newCart","filter","item","activeProducts","getActiveProducts","products","inStock","Stock","addToCart","asyncGetProducts","dispatch","a","axios","get","process","REACT_APP_PRODUCTS_API","productResponse","data","results","productReducer","useEffect","Card","description","Button","variant","removeFromCart","asyncGetCategories","REACT_APP_CATEGORIES_API","response","App","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f2ea824.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\nimport { IconButton, Badge, Paper } from \"@mui/material\";\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\n\nfunction Header(props) {\n  return (\n    <Paper className=\"header\" elevation={2}>\n      Best Store Ever\n      <IconButton aria-label=\"cart\">\n        <Badge badgeContent={props.shoppingcart.cart.length} color=\"primary\">\n          <ShoppingCartOutlinedIcon />\n        </Badge>\n      </IconButton>\n    </Paper>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  shoppingcart: state.shoppingCart,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import { BsGithub, BsLinkedin } from \"react-icons/bs\";\nimport { Paper } from \"@mui/material\";\n\nfunction Footer() {\n  return (\n    <Paper className=\"footer\" elevation={2}>\n      &copy; 2021 {\"    \"}\n      <a href=\"https://github.com/Twin-2\">\n        <BsGithub />\n      </a>\n      {\"    \"}\n      <a href=\"https://www.linkedin.com/in/david-whitmore-501273160/\">\n        <BsLinkedin />\n      </a>\n    </Paper>\n  );\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nlet initialState = {\n  categories: [],\n  activeCategory: \"\",\n};\n\n// a reducer is a pure function that is meant to eval an action type\nconst categoryReducer = (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"ACTIVATE_CATEGORY\":\n      return { ...state, activeCategory: payload };\n    case \"GET_CATEGORIES\":\n      return { ...state, categories: payload };\n    default:\n      return state;\n  }\n};\n\nexport const asyncGetCategories = () => async (dispatch) => {\n  const response = await axios.get(process.env.REACT_APP_CATEGORIES_API);\n  dispatch(getCategories(response.data.results));\n};\n\nconst getCategories = (payload) => {\n  return {\n    type: \"GET_CATEGORIES\",\n    payload: payload,\n  };\n};\n\n// an action creator is a function that RETURNS an ACTION\nexport const activate = (category) => {\n  // action is an object literal with a type and a payload (optional)\n  return {\n    type: \"ACTIVATE_CATEGORY\",\n    payload: category,\n  };\n};\n\nexport default categoryReducer;\n","import { connect } from \"react-redux\";\nimport { activate } from \"../reduxStore/reducers/categoryReducer\";\nimport { Tabs, Tab } from \"@mui/material\";\n\nfunction Categories(props) {\n  return (\n    <section>\n      <h1>Product Categories</h1>\n      <Tabs value={false} textColor=\"primary\" indicatorColor=\"primary\">\n        {props.categories.categories.map((category, idx) => (\n          <Tab\n            label={category.name}\n            key={idx}\n            onClick={() => props.activate(category.name)}\n          />\n        ))}\n      </Tabs>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categoryReducer,\n});\n\nconst mapDispatchToProps = { activate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","let initialState = {\n  cart: [],\n};\n\n// a reducer is a pure function that is meant to eval an action type\nconst shoppingCart = (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"ADD_TO_CART\":\n      if (state.cart.includes(payload)) {\n        return state;\n      } else {\n        return { ...state, cart: [...state.cart, payload] };\n      }\n    case \"REMOVE_FROM_CART\":\n      console.log(payload);\n      let newCart = state.cart.filter((item) => item !== payload);\n      return { ...state, cart: newCart };\n    default:\n      return state;\n  }\n};\n\n// an action creator is a function that RETURNS an ACTION\nexport const addToCart = (item) => {\n  // action is an object literal with a type and a payload (optional)\n  return {\n    type: \"ADD_TO_CART\",\n    payload: item,\n  };\n};\n\nexport const removeFromCart = (item) => {\n  // action is an object literal with a type and a payload (optional)\n  return {\n    type: \"REMOVE_FROM_CART\",\n    payload: item,\n  };\n};\n\nexport default shoppingCart;\n","import axios from \"axios\";\n\nlet initialState = {\n  activeProducts: [],\n};\n\n// a reducer is a pure function that is meant to eval an action type\nconst categoryReducer = (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    // case \"ACTIVATE_CATEGORY\":\n    //   const filteredProducts = state.products.filter(\n    //     (product) => product.category === payload\n    //   );\n    //   return { ...state, activeProducts: filteredProducts };\n    case \"GET_ACTIVATE_PRODUCTS\":\n      return { ...state, activeProducts: payload };\n    // make this update the api\n    case \"ADD_TO_CART\":\n      state.activeProducts.map((item) => {\n        if (item === payload) {\n          item.inStock--;\n        }\n        return item;\n      });\n      return state;\n    // make this update the api\n    case \"REMOVE_FROM_CART\":\n      state.activeProducts.map((item) => {\n        if (item === payload) {\n          item.Stock++;\n        }\n        return item;\n      });\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const asyncGetProducts = (category) => async (dispatch) => {\n  const productResponse = await axios.get(\n    `${process.env.REACT_APP_PRODUCTS_API}?category=${category}`\n  );\n  dispatch(getActiveProducts(productResponse.data.results));\n};\n\n// an action creator is a function that RETURNS an ACTION\nexport const getActiveProducts = (products) => {\n  // action is an object literal with a type and a payload (optional)\n  return {\n    type: \"GET_ACTIVATE_PRODUCTS\",\n    payload: products,\n  };\n};\n\nexport default categoryReducer;\n","import { connect } from \"react-redux\";\nimport { addToCart } from \"../reduxStore/reducers/shoppingCart\";\nimport { asyncGetProducts } from \"../reduxStore/reducers/productReducer\";\nimport { Button, Card } from \"@mui/material\";\nimport { useEffect } from \"react\";\n\nfunction Products(props) {\n  function addToCart(item) {\n    if (!props.shoppingCart.cart.includes(item)) {\n      props.addToCart(item);\n    }\n  }\n\n  const { category, asyncGetProducts } = props;\n  useEffect(() => {\n    asyncGetProducts(category.activeCategory);\n  }, [category.activeCategory, asyncGetProducts]);\n\n  return (\n    <main>\n      <h1>{props.category.activeCategory} </h1>\n      <div className=\"products\">\n        {props.products.activeProducts.map((item, idx) => (\n          <Card className=\"card\" key={idx}>\n            {item.name}: {item.description}\n            <br />\n            In Stock: {item.inStock}\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() => addToCart(item)}\n            >\n              Add to cart\n            </Button>\n          </Card>\n        ))}\n      </div>\n    </main>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.productReducer,\n  category: state.categoryReducer,\n  shoppingCart: state.shoppingCart,\n});\n\nconst mapDispatchToProps = { addToCart, asyncGetProducts };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import { connect } from \"react-redux\";\nimport { removeFromCart } from \"../reduxStore/reducers/shoppingCart\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\n\nfunction SimpleCart(props) {\n  return (\n    <div className=\"simpleCart\">\n      {props.shoppingCart.cart.map((item, idx) => (\n        <div key={idx}>\n          {/* {console.log(item)} */}\n          <span>{item.name}</span>\n          <HighlightOffIcon onClick={() => props.removeFromCart(item)} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  shoppingCart: state.shoppingCart,\n});\n\nconst mapDispatchToProps = { removeFromCart };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleCart);\n","import Categories from \"./categories\";\nimport Products from \"./products\";\nimport SimpleCart from \"./simpleCart\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { asyncGetCategories } from \"../reduxStore/reducers/categoryReducer\";\n\nfunction Storefront(props) {\n  const { asyncGetCategories } = props;\n  useEffect(() => {\n    asyncGetCategories();\n  }, [asyncGetCategories]);\n\n  return (\n    <>\n      <Categories />\n      <Products />\n      <SimpleCart />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categoryReducer,\n});\n\nconst mapDispatchToProps = { asyncGetCategories };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Storefront);\n","import Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Storefront from \"./components/storefront\";\nimport \"./css/app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Storefront />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport categoryReducer from \"./reducers/categoryReducer\";\nimport productReducer from \"./reducers/productReducer\";\nimport shoppingCart from \"./reducers/shoppingCart\";\nimport thunk from \"redux-thunk\";\n\nlet reducers = combineReducers({\n  categoryReducer,\n  productReducer,\n  shoppingCart,\n});\n\nconst store = () => {\n  return createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n};\n\nconsole.log(\"_REDUX_STORE_\", store());\n\nexport default store();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}